{"ast":null,"code":"// Waste types available in the system\nexport const WASTE_TYPES = [{\n  value: 'e-waste',\n  label: 'E-Waste (Electronics)',\n  key: 'e_waste_price',\n  icon: 'fas fa-microchip',\n  emoji: 'üì±',\n  color: 'warning',\n  bgColor: '#ffc107'\n}, {\n  value: 'plastic',\n  label: 'Plastic',\n  key: 'plastic_price',\n  icon: 'fas fa-bottle-water',\n  emoji: 'üç∂',\n  color: 'info',\n  bgColor: '#0dcaf0'\n}, {\n  value: 'paper',\n  label: 'Paper/Cardboard',\n  key: 'paper_price',\n  icon: 'fas fa-newspaper',\n  emoji: 'üìÑ',\n  color: 'secondary',\n  bgColor: '#6c757d'\n}, {\n  value: 'metal',\n  label: 'Metal',\n  key: 'metal_price',\n  icon: 'fas fa-cog',\n  emoji: 'üîß',\n  color: 'dark',\n  bgColor: '#212529'\n}, {\n  value: 'glass',\n  label: 'Glass',\n  key: 'glass_price',\n  icon: 'fas fa-wine-glass',\n  emoji: 'üç∑',\n  color: 'info',\n  bgColor: '#6f42c1'\n}];\n\n// Helper function to get price field name from waste type\nexport const getPriceFieldName = wasteType => {\n  const type = WASTE_TYPES.find(t => t.value === wasteType);\n  return type ? type.key : null;\n};\n\n// Helper function to get waste type info by value\nexport const getWasteTypeInfo = wasteType => {\n  const type = WASTE_TYPES.find(t => t.value === wasteType);\n  return type || {\n    value: wasteType,\n    label: wasteType,\n    icon: 'fas fa-trash-alt',\n    emoji: 'üóëÔ∏è',\n    color: 'secondary',\n    bgColor: '#6c757d'\n  };\n};","map":{"version":3,"names":["WASTE_TYPES","value","label","key","icon","emoji","color","bgColor","getPriceFieldName","wasteType","type","find","t","getWasteTypeInfo"],"sources":["C:/Users/2189910/Project Nodejs Updated/frontend/src/utils/wasteTypes.js"],"sourcesContent":["// Waste types available in the system\r\nexport const WASTE_TYPES = [\r\n  { \r\n    value: 'e-waste', \r\n    label: 'E-Waste (Electronics)', \r\n    key: 'e_waste_price',\r\n    icon: 'fas fa-microchip',\r\n    emoji: 'üì±',\r\n    color: 'warning',\r\n    bgColor: '#ffc107'\r\n  },\r\n  { \r\n    value: 'plastic', \r\n    label: 'Plastic', \r\n    key: 'plastic_price',\r\n    icon: 'fas fa-bottle-water',\r\n    emoji: 'üç∂',\r\n    color: 'info',\r\n    bgColor: '#0dcaf0'\r\n  },\r\n  { \r\n    value: 'paper', \r\n    label: 'Paper/Cardboard', \r\n    key: 'paper_price',\r\n    icon: 'fas fa-newspaper',\r\n    emoji: 'üìÑ',\r\n    color: 'secondary',\r\n    bgColor: '#6c757d'\r\n  },\r\n  { \r\n    value: 'metal', \r\n    label: 'Metal', \r\n    key: 'metal_price',\r\n    icon: 'fas fa-cog',\r\n    emoji: 'üîß',\r\n    color: 'dark',\r\n    bgColor: '#212529'\r\n  },\r\n  { \r\n    value: 'glass', \r\n    label: 'Glass', \r\n    key: 'glass_price',\r\n    icon: 'fas fa-wine-glass',\r\n    emoji: 'üç∑',\r\n    color: 'info',\r\n    bgColor: '#6f42c1'\r\n  }\r\n];\r\n\r\n// Helper function to get price field name from waste type\r\nexport const getPriceFieldName = (wasteType) => {\r\n  const type = WASTE_TYPES.find(t => t.value === wasteType);\r\n  return type ? type.key : null;\r\n};\r\n\r\n// Helper function to get waste type info by value\r\nexport const getWasteTypeInfo = (wasteType) => {\r\n  const type = WASTE_TYPES.find(t => t.value === wasteType);\r\n  return type || { \r\n    value: wasteType, \r\n    label: wasteType, \r\n    icon: 'fas fa-trash-alt', \r\n    emoji: 'üóëÔ∏è',\r\n    color: 'secondary',\r\n    bgColor: '#6c757d'\r\n  };\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAG,CACzB;EACEC,KAAK,EAAE,SAAS;EAChBC,KAAK,EAAE,uBAAuB;EAC9BC,GAAG,EAAE,eAAe;EACpBC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,SAAS;EAChBC,OAAO,EAAE;AACX,CAAC,EACD;EACEN,KAAK,EAAE,SAAS;EAChBC,KAAK,EAAE,SAAS;EAChBC,GAAG,EAAE,eAAe;EACpBC,IAAI,EAAE,qBAAqB;EAC3BC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE;AACX,CAAC,EACD;EACEN,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,iBAAiB;EACxBC,GAAG,EAAE,aAAa;EAClBC,IAAI,EAAE,kBAAkB;EACxBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,WAAW;EAClBC,OAAO,EAAE;AACX,CAAC,EACD;EACEN,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,aAAa;EAClBC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE;AACX,CAAC,EACD;EACEN,KAAK,EAAE,OAAO;EACdC,KAAK,EAAE,OAAO;EACdC,GAAG,EAAE,aAAa;EAClBC,IAAI,EAAE,mBAAmB;EACzBC,KAAK,EAAE,IAAI;EACXC,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE;AACX,CAAC,CACF;;AAED;AACA,OAAO,MAAMC,iBAAiB,GAAIC,SAAS,IAAK;EAC9C,MAAMC,IAAI,GAAGV,WAAW,CAACW,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACX,KAAK,KAAKQ,SAAS,CAAC;EACzD,OAAOC,IAAI,GAAGA,IAAI,CAACP,GAAG,GAAG,IAAI;AAC/B,CAAC;;AAED;AACA,OAAO,MAAMU,gBAAgB,GAAIJ,SAAS,IAAK;EAC7C,MAAMC,IAAI,GAAGV,WAAW,CAACW,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACX,KAAK,KAAKQ,SAAS,CAAC;EACzD,OAAOC,IAAI,IAAI;IACbT,KAAK,EAAEQ,SAAS;IAChBP,KAAK,EAAEO,SAAS;IAChBL,IAAI,EAAE,kBAAkB;IACxBC,KAAK,EAAE,KAAK;IACZC,KAAK,EAAE,WAAW;IAClBC,OAAO,EAAE;EACX,CAAC;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}